import numpy as np

def vectormatmulti(v, m):
    m = np.array(m)
    print("Vector is:", v)
    print("Matrix is:", m)
    
    if len(v) != m.shape[0]:
        print("Multiplication not possible!")
        return
    
    p = [0] * m.shape[1]
    for i in range(len(v)):
        for j in range(m.shape[1]):
            p[j] += v[i] * m[i][j]
    
    print("Resultant Vector (Matrix-Vector Multiplication):", p)

def matinput(rows, cols, name):
    matrix = []
    print(f"Enter the elements of matrix {name} (row by row):")
    for i in range(rows):
        row = []
        for j in range(cols):
            while True:
                try:
                    element = int(input(f"Element [{i+1}][{j+1}]: "))
                    row.append(element)
                    break
                except ValueError:
                    print("Please enter a valid integer.")
        matrix.append(row)
    return matrix

rows1 = int(input("Enter the number of rows for the matrix (A): "))
cols1 = int(input("Enter the number of columns for the matrix (A): "))
arr1 = matinput(rows1, cols1, 'A')

vector = []
print("Enter the elements of the vector:")
for i in range(cols1):
    while True:
        try:
            element = int(input(f"Element [{i+1}]: "))
            vector.append(element)
            break
        except ValueError:
            print("Please enter a valid integer.")

vectormatmulti(vector, arr1)
