import numpy as np

def page_rank(graph, d=0.85, max_iter=100, tol=1e-6):
    num_nodes = len(graph)
    pagerank = {node: 1 / num_nodes for node in graph}
    nodes = list(graph.keys())
    
    for _ in range(max_iter):
        new_pagerank = {node: (1 - d) / num_nodes for node in graph}
        for node in nodes:
            for neighbor in graph[node]:
                new_pagerank[neighbor] += d * pagerank[node] / len(graph[node])
        if sum(abs(new_pagerank[node] - pagerank[node]) for node in nodes) < tol:
            break
        pagerank = new_pagerank
        
    return pagerank

graph = {
    'A': ['B', 'C'],
    'B': ['C', 'D'],
    'C': ['A', 'D'],
    'D': []
}

pagerank_values = page_rank(graph)
print(pagerank_values)
